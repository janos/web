name: Go
on: [push, pull_request]
jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        stable: 'false'
        go-version: '1.18.0'

    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Cache Go modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-

    # todo: enable when go 1.18 is supported
    # - name: Lint
    #   uses: golangci/golangci-lint-action@v2
    #   with:
    #     version: v1.43.0
    #     args: --timeout 10m

    - name: Vet
      if: matrix.os == 'ubuntu-latest'
      run: go vet -v ./...

    - name: Build
      env:
        CGO_ENABLED: 0
      run: go build -ldflags "-s -w" ./...

    - name: Test
      run: go test -v -race ./...
